{"version":3,"sources":["webpack:///./src/templates/project-page-research.js","webpack:///./src/templates/project-page.js"],"names":["LoadProjectResearch","_ref","projectName","projectNodes","useStaticQuery","allContentElement","edges","filter","n","node","projects","includes","length","React","createElement","Fragment","MediaQuery","minWidth","style","subheaderContainer","researchContainer","map","_ref2","ContentSquare","maxWidth","subheaderContainerMobile","_ref3","ProjectPageResearch","_Component","apply","arguments","_inheritsLoose","prototype","render","this","props","Link","to","backLink","backLinkMobile","Component","display","flexFlow","justifyContent","width","margin","padding","fontFamily","fontSize","fontWeight","lineHeight","textAlign","textDecoration","color","ProjectPage","data","post","markdownRemark","Layout","contentWrapper","titleText","frontmatter","title","dangerouslySetInnerHTML","__html","html","descriptionContainer","contentWrapperMobile","titleTextMobile","descriptionContainerMobile","minHeight","marginBottom"],"mappings":"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","file":"component---src-templates-project-page-js-6ce9d638fc25063fa9aa.js","sourcesContent":["import React, { Component } from \"react\"\nimport Layout from \"../components/layout\"\n\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport ContentSquare from '../components/index/featured/contentSquare'\n\nimport MediaQuery from 'react-responsive'\n\nfunction LoadProjectResearch({ projectName }) {\n  const data = useStaticQuery(graphql`\n      query ProjectResearchQuery {\n          allContentElement(\n              filter: {type: {eq: \"publication\"}},\n              sort: { fields: date, order: DESC }\n          ) {\n              edges {\n                  node {\n                      id\n                      imageName\n                      fileName\n                      linkName\n                      authors\n                      pageLink\n                      projects\n                      status\n                      summary\n                      title\n                      type\n                      journal\n                      date\n                  }\n              }\n          }\n      }\n  `)\n  \n    const projectNodes = data.allContentElement.edges.filter(n => n.node.projects.includes(projectName))\n\n    if (projectNodes.length >= 1) {\n      return(\n        <>\n        <MediaQuery minWidth = {500}>\n        <div style = {subheaderContainer}>\n          Research from this project:   \n        </div>\n        <div style = {researchContainer}>\n        { projectNodes.map(({ node }) => (\n            <ContentSquare node = {node} />\n        )) }\n        </div>\n        </MediaQuery>\n        <MediaQuery maxWidth = {499}>\n        <div style = {subheaderContainerMobile}>\n          Research from this project:   \n        </div>\n        <div style = {researchContainer}>\n        { projectNodes.map(({ node }) => (\n            <ContentSquare node = {node} />\n        )) }\n        </div>\n        </MediaQuery>\n        </>\n        )\n      } else {\n        return(\n          <>\n          <MediaQuery minWidth = {500}>\n            <div style = {subheaderContainer}>\n              No Research Yet\n            </div>\n          </MediaQuery>\n          <MediaQuery maxWidth = {499}>\n            <div style = {subheaderContainerMobile}>\n              No Research Yet\n            </div>\n          </MediaQuery>\n          </>\n          )\n      }\n    }\n\nclass ProjectPageResearch extends Component {\n  render() {\n    return(\n      <>\n      <MediaQuery minWidth = {500}>\n        <LoadProjectResearch projectName = {this.props.projectName} />\n        <Link to = '/projects' style = {backLink}>\n          <div>\n            Back to Projects\n          </div>\n        </Link>\n      </MediaQuery>\n      <MediaQuery maxWidth = {499}>\n      <LoadProjectResearch projectName = {this.props.projectName} />\n        <Link to = '/projects' style = {backLinkMobile}>\n          <div>\n            Back to Projects\n          </div>\n        </Link>\n      </MediaQuery>\n      </>\n    )\n  }\n}\n\nconst researchContainer = {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'left',\n    width: '100%',\n\n    margin: 'auto',\n    padding: '40px 0px 60px 0px'\n}\n\nconst subheaderContainer = {\n  fontFamily: 'Raleway',\n  fontSize: '34px',\n  fontWeight: '400',\n  lineHeight: '1.2em',\n\n  textAlign: 'left',\n}\n\nconst subheaderContainerMobile = {\n  ...subheaderContainer,\n  fontSize: '26px',\n}\n\nconst backLink = {\n  textDecoration: 'none',\n  color: '#3896f5',\n\n  fontFamily: 'Raleway',\n  fontSize: '22px',\n  fontWeight: '400',\n  lineHeight: '1.2em',\n\n  margin: '0px 0px 0px 20px'\n}\n\nconst backLinkMobile = {\n  ...backLink,\n  fontSize: '20px',\n}\n\nexport default ProjectPageResearch;","import React from \"react\"\nimport Layout from \"../components/layout\"\n\nimport { graphql } from \"gatsby\"\n\nimport ProjectPageResearch from './project-page-research'\n\nimport MediaQuery from 'react-responsive'\n\nexport default function ProjectPage({ data }) {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <MediaQuery minWidth = {500}>\n      <div style = {contentWrapper}>\n        <h1 style = {titleText}>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} style = {descriptionContainer} />\n\n        <div style = {researchContainer}>\n          <ProjectPageResearch projectName = {post.frontmatter.title} />\n        </div>\n      </div>\n      </MediaQuery>\n      <MediaQuery maxWidth = {499}>\n      <div style = {contentWrapperMobile}>\n        <h1 style = {titleTextMobile}>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} style = {descriptionContainerMobile} />\n\n        <div style = {researchContainer}>\n          <ProjectPageResearch projectName = {post.frontmatter.title} />\n        </div>\n      </div>\n      </MediaQuery>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\nconst contentWrapper = {\n  width: '100%',\n  minHeight: '700px',\n  margin: '40px auto 20px auto',\n  padding: '0px 40px 0px 40px'\n}\n\nconst contentWrapperMobile = {\n  ...contentWrapper,\n  padding: '0px 10px 0px 10px'\n}\n\nconst titleText = {\n  marginBottom: '20px'\n}\n\nconst titleTextMobile = {\n  fontSize: '20px',\n  marginBottom: '10px'\n}\n\nconst descriptionContainer = {\n  fontFamily: 'Raleway',\n    fontSize: '24px',\n    fontWeight: '400',\n    lineHeight: '1.3em',\n}\n\nconst descriptionContainerMobile = {\n  ...descriptionContainer,\n    fontSize: '18px',\n}\n\nconst researchContainer = {\n  width: '100%',\n  margin: 'auto',\n  padding: '40px 0px 26px 0px',\n}"],"sourceRoot":""}