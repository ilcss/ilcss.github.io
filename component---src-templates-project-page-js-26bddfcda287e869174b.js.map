{"version":3,"sources":["webpack:///./src/templates/project-page-research.js","webpack:///./src/templates/project-page.js"],"names":["LoadProjectResearch","projectName","projectNodes","useStaticQuery","allContentElement","edges","filter","n","node","projects","includes","length","minWidth","style","subheaderContainer","researchContainer","map","maxWidth","subheaderContainerMobile","ProjectPageResearch","render","this","props","to","backLink","backLinkMobile","Component","display","flexFlow","justifyContent","width","margin","padding","fontFamily","fontSize","fontWeight","lineHeight","textAlign","textDecoration","color","ProjectPage","post","data","markdownRemark","contentWrapper","titleText","frontmatter","title","dangerouslySetInnerHTML","__html","html","descriptionContainer","contentWrapperMobile","titleTextMobile","descriptionContainerMobile","minHeight","marginBottom"],"mappings":"yOASA,SAASA,EAAT,GAA+C,IAAhBC,EAAe,EAAfA,YA2BrBC,EA1BKC,yBAAe,cA0BAC,kBAAkBC,MAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,SAASC,SAAST,MAEvF,OAAIC,EAAaS,QAAU,EAEvB,oCACA,kBAAC,IAAD,CAAYC,SAAY,KACxB,yBAAKC,MAASC,GAAd,+BAGA,yBAAKD,MAASE,GACZb,EAAac,KAAI,gBAAGR,EAAH,EAAGA,KAAH,OACf,kBAAC,IAAD,CAAeA,KAAQA,SAI3B,kBAAC,IAAD,CAAYS,SAAY,KACxB,yBAAKJ,MAASK,GAAd,+BAGA,yBAAKL,MAASE,GACZb,EAAac,KAAI,gBAAGR,EAAH,EAAGA,KAAH,OACf,kBAAC,IAAD,CAAeA,KAAQA,UAQzB,oCACA,kBAAC,IAAD,CAAYI,SAAY,KACtB,yBAAKC,MAASC,GAAd,oBAIF,kBAAC,IAAD,CAAYG,SAAY,KACtB,yBAAKJ,MAASK,GAAd,qB,IASNC,E,kGACJC,OAAA,WACE,OACE,oCACA,kBAAC,IAAD,CAAYR,SAAY,KACtB,kBAACZ,EAAD,CAAqBC,YAAeoB,KAAKC,MAAMrB,cAC/C,kBAAC,OAAD,CAAMsB,GAAK,YAAYV,MAASW,GAC9B,mDAKJ,kBAAC,IAAD,CAAYP,SAAY,KACxB,kBAACjB,EAAD,CAAqBC,YAAeoB,KAAKC,MAAMrB,cAC7C,kBAAC,OAAD,CAAMsB,GAAK,YAAYV,MAASY,GAC9B,qD,GAfwBC,aAyB5BX,EAAoB,CACtBY,QAAS,OACTC,SAAU,WACVC,eAAgB,OAChBC,MAAO,OAEPC,OAAQ,OACRC,QAAS,qBAGPlB,EAAqB,CACzBmB,WAAY,UACZC,SAAU,OACVC,WAAY,MACZC,WAAY,QAEZC,UAAW,QAGPnB,EAAwB,iBACzBJ,EADyB,CAE5BoB,SAAU,SAGNV,EAAW,CACfc,eAAgB,OAChBC,MAAO,UAEPN,WAAY,UACZC,SAAU,OACVC,WAAY,MACZC,WAAY,QAEZL,OAAQ,oBAGJN,EAAc,iBACfD,EADe,CAElBU,SAAU,SAGGf,IC1IA,SAASqB,EAAT,GAAgC,IACvCC,EADsC,EAARC,KAClBC,eAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY/B,SAAY,KACxB,yBAAKC,MAAS+B,GACZ,wBAAI/B,MAASgC,GAAYJ,EAAKK,YAAYC,OAC1C,yBAAKC,wBAAyB,CAAEC,OAAQR,EAAKS,MAAQrC,MAASsC,IAE9D,yBAAKtC,MAASE,GACZ,kBAAC,EAAD,CAAqBd,YAAewC,EAAKK,YAAYC,WAIzD,kBAAC,IAAD,CAAY9B,SAAY,KACxB,yBAAKJ,MAASuC,GACZ,wBAAIvC,MAASwC,GAAkBZ,EAAKK,YAAYC,OAChD,yBAAKC,wBAAyB,CAAEC,OAAQR,EAAKS,MAAQrC,MAASyC,IAE9D,yBAAKzC,MAASE,GACZ,kBAAC,EAAD,CAAqBd,YAAewC,EAAKK,YAAYC,YAQxD,IAUDH,EAAiB,CACrBd,MAAO,OACPyB,UAAW,QACXxB,OAAQ,sBACRC,QAAS,qBAGLoB,EAAoB,iBACrBR,EADqB,CAExBZ,QAAS,sBAGLa,EAAY,CAChBW,aAAc,QAGVH,EAAkB,CACtBnB,SAAU,OACVsB,aAAc,QAGVL,EAAuB,CAC3BlB,WAAY,UACVC,SAAU,OACVC,WAAY,MACZC,WAAY,SAGVkB,EAA0B,iBAC3BH,EAD2B,CAE5BjB,SAAU,SAGRnB,EAAoB,CACxBe,MAAO,OACPC,OAAQ,OACRC,QAAS","file":"component---src-templates-project-page-js-26bddfcda287e869174b.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport Layout from \"../components/layout\"\r\n\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\n\r\nimport ContentSquare from '../components/index/featured/contentSquare'\r\n\r\nimport MediaQuery from 'react-responsive'\r\n\r\nfunction LoadProjectResearch({ projectName }) {\r\n  const data = useStaticQuery(graphql`\r\n      query ProjectResearchQuery {\r\n          allContentElement(\r\n              filter: {type: {eq: \"publication\"}},\r\n              sort: { fields: date, order: DESC }\r\n          ) {\r\n              edges {\r\n                  node {\r\n                      id\r\n                      imageName\r\n                      fileName\r\n                      authors\r\n                      pageLink\r\n                      projects\r\n                      status\r\n                      summary\r\n                      title\r\n                      type\r\n                      journal\r\n                      date\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  `)\r\n  \r\n    const projectNodes = data.allContentElement.edges.filter(n => n.node.projects.includes(projectName))\r\n\r\n    if (projectNodes.length >= 1) {\r\n      return(\r\n        <>\r\n        <MediaQuery minWidth = {500}>\r\n        <div style = {subheaderContainer}>\r\n          Research from this project:   \r\n        </div>\r\n        <div style = {researchContainer}>\r\n        { projectNodes.map(({ node }) => (\r\n            <ContentSquare node = {node} />\r\n        )) }\r\n        </div>\r\n        </MediaQuery>\r\n        <MediaQuery maxWidth = {499}>\r\n        <div style = {subheaderContainerMobile}>\r\n          Research from this project:   \r\n        </div>\r\n        <div style = {researchContainer}>\r\n        { projectNodes.map(({ node }) => (\r\n            <ContentSquare node = {node} />\r\n        )) }\r\n        </div>\r\n        </MediaQuery>\r\n        </>\r\n        )\r\n      } else {\r\n        return(\r\n          <>\r\n          <MediaQuery minWidth = {500}>\r\n            <div style = {subheaderContainer}>\r\n              No Research Yet\r\n            </div>\r\n          </MediaQuery>\r\n          <MediaQuery maxWidth = {499}>\r\n            <div style = {subheaderContainerMobile}>\r\n              No Research Yet\r\n            </div>\r\n          </MediaQuery>\r\n          </>\r\n          )\r\n      }\r\n    }\r\n\r\nclass ProjectPageResearch extends Component {\r\n  render() {\r\n    return(\r\n      <>\r\n      <MediaQuery minWidth = {500}>\r\n        <LoadProjectResearch projectName = {this.props.projectName} />\r\n        <Link to = '/projects' style = {backLink}>\r\n          <div>\r\n            Back to Projects\r\n          </div>\r\n        </Link>\r\n      </MediaQuery>\r\n      <MediaQuery maxWidth = {499}>\r\n      <LoadProjectResearch projectName = {this.props.projectName} />\r\n        <Link to = '/projects' style = {backLinkMobile}>\r\n          <div>\r\n            Back to Projects\r\n          </div>\r\n        </Link>\r\n      </MediaQuery>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst researchContainer = {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'left',\r\n    width: '100%',\r\n\r\n    margin: 'auto',\r\n    padding: '40px 0px 60px 0px'\r\n}\r\n\r\nconst subheaderContainer = {\r\n  fontFamily: 'Raleway',\r\n  fontSize: '34px',\r\n  fontWeight: '400',\r\n  lineHeight: '1.2em',\r\n\r\n  textAlign: 'left',\r\n}\r\n\r\nconst subheaderContainerMobile = {\r\n  ...subheaderContainer,\r\n  fontSize: '26px',\r\n}\r\n\r\nconst backLink = {\r\n  textDecoration: 'none',\r\n  color: '#3896f5',\r\n\r\n  fontFamily: 'Raleway',\r\n  fontSize: '22px',\r\n  fontWeight: '400',\r\n  lineHeight: '1.2em',\r\n\r\n  margin: '0px 0px 0px 20px'\r\n}\r\n\r\nconst backLinkMobile = {\r\n  ...backLink,\r\n  fontSize: '20px',\r\n}\r\n\r\nexport default ProjectPageResearch;","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport ProjectPageResearch from './project-page-research'\r\n\r\nimport MediaQuery from 'react-responsive'\r\n\r\nexport default function ProjectPage({ data }) {\r\n  const post = data.markdownRemark\r\n  return (\r\n    <Layout>\r\n      <MediaQuery minWidth = {500}>\r\n      <div style = {contentWrapper}>\r\n        <h1 style = {titleText}>{post.frontmatter.title}</h1>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} style = {descriptionContainer} />\r\n\r\n        <div style = {researchContainer}>\r\n          <ProjectPageResearch projectName = {post.frontmatter.title} />\r\n        </div>\r\n      </div>\r\n      </MediaQuery>\r\n      <MediaQuery maxWidth = {499}>\r\n      <div style = {contentWrapperMobile}>\r\n        <h1 style = {titleTextMobile}>{post.frontmatter.title}</h1>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} style = {descriptionContainerMobile} />\r\n\r\n        <div style = {researchContainer}>\r\n          <ProjectPageResearch projectName = {post.frontmatter.title} />\r\n        </div>\r\n      </div>\r\n      </MediaQuery>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\nconst contentWrapper = {\r\n  width: '100%',\r\n  minHeight: '700px',\r\n  margin: '40px auto 20px auto',\r\n  padding: '0px 40px 0px 40px'\r\n}\r\n\r\nconst contentWrapperMobile = {\r\n  ...contentWrapper,\r\n  padding: '0px 10px 0px 10px'\r\n}\r\n\r\nconst titleText = {\r\n  marginBottom: '20px'\r\n}\r\n\r\nconst titleTextMobile = {\r\n  fontSize: '20px',\r\n  marginBottom: '10px'\r\n}\r\n\r\nconst descriptionContainer = {\r\n  fontFamily: 'Raleway',\r\n    fontSize: '24px',\r\n    fontWeight: '400',\r\n    lineHeight: '1.3em',\r\n}\r\n\r\nconst descriptionContainerMobile = {\r\n  ...descriptionContainer,\r\n    fontSize: '18px',\r\n}\r\n\r\nconst researchContainer = {\r\n  width: '100%',\r\n  margin: 'auto',\r\n  padding: '40px 0px 26px 0px',\r\n}"],"sourceRoot":""}