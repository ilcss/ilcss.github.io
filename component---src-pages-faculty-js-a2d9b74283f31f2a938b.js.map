{"version":3,"sources":["webpack:///./src/components/faculty/person.js","webpack:///./src/components/faculty/people.js","webpack:///./src/pages/faculty.js"],"names":["Headshot","fluid","fileName","alt","style","allImageSharp","useStaticQuery","nodes","find","n","originalName","err","Person","render","websiteLink","this","props","node","website","href","target","aLinkStyle","linkText","minWidth","personWrapper","headshotWrapper","imageName","name","headshotImage","maxWidth","headshotWrapperMed","textWrapper","nameText","bioText","bio","personWrapperMobile","headshotWrapperMobile","textWrapperMobile","Component","margin","padding","display","flexFlow","width","height","flexShrink","overflow","borderRadius","objectFit","position","textAlign","fontFamily","fontSize","fontWeight","lineHeight","marginTop","color","textDecoration","LoadFaculty","type","data","faculty","edges","map","affiliated_faculty","graduate_students","People","componentWrapper","peopleHeader","peopleHeaderMobile","backgroundColor","justifyContent","paddingTop","FacultyPage","title"],"mappings":"uNAOMA,EAAW,SAAC,GAA8B,IAc1CC,EAdcC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACzBC,EAAkBC,yBAAe,cAAjCD,cAeN,IACEJ,EAAQI,EAAcE,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAER,MAAMS,eAAiBR,KAC5DD,MACH,MAAMU,GACNV,EAAQ,KAGZ,OACE,oCACE,kBAAC,IAAD,CAAKA,MAAOA,EAAOE,IAAKA,EAAKC,MAAOA,MAMpCQ,E,kGAEFC,OAAA,WAEE,IAAMC,EAA4C,KAA5BC,KAAKC,MAAMC,KAAKC,QACpC,qCACA,uBAAGC,KAAQJ,KAAKC,MAAMC,KAAKC,QAASE,OAAS,SAAShB,MAASiB,GAC7D,uBAAGjB,MAASkB,GAAZ,sBAMF,OACE,oCACA,kBAAC,IAAD,CAAYC,SAAY,KACtB,yBAAKnB,MAASoB,GACV,kBAAC,IAAD,CAAYD,SAAY,KACxB,yBAAKnB,MAASqB,GACV,kBAAC,EAAD,CAAUvB,SAAYa,KAAKC,MAAMC,KAAKS,UAAWvB,IAAOY,KAAKC,MAAMC,KAAKU,KAAMvB,MAASwB,MAG3F,kBAAC,IAAD,CAAYC,SAAY,KACxB,yBAAKzB,MAAS0B,GACV,kBAAC,EAAD,CAAU5B,SAAYa,KAAKC,MAAMC,KAAKS,UAAWvB,IAAOY,KAAKC,MAAMC,KAAKU,KAAMvB,MAASwB,MAG3F,yBAAKxB,MAAS2B,GACV,uBAAG3B,MAAS4B,GAAYjB,KAAKC,MAAMC,KAAKU,MACxC,uBAAGvB,MAAS6B,GACNlB,KAAKC,MAAMC,KAAKiB,KAErBpB,KAIX,kBAAC,IAAD,CAAYe,SAAY,KACxB,yBAAKzB,MAAS+B,GACV,yBAAK/B,MAASgC,GACV,kBAAC,EAAD,CAAUlC,SAAYa,KAAKC,MAAMC,KAAKS,UAAWvB,IAAOY,KAAKC,MAAMC,KAAKU,KAAMvB,MAASwB,KAE3F,yBAAKxB,MAASiC,GACV,uBAAGjC,MAAS4B,GAAYjB,KAAKC,MAAMC,KAAKU,MACxC,uBAAGvB,MAAS6B,GACNlB,KAAKC,MAAMC,KAAKiB,KAErBpB,O,GA9CEwB,aAuDfd,EAAgB,CAClBe,OAAQ,sBACRC,QAAS,oBACTX,SAAU,SAEVY,QAAS,OACTC,SAAU,cAGRP,EAAmB,iBACpBX,EADoB,CAEvBkB,SAAU,kBAGNjB,EAAkB,CACpBkB,MAAO,QACPC,OAAQ,QACRC,WAAY,IACZC,SAAU,UAGRhB,EAAqB,CACzBa,MAAO,QACPC,OAAQ,QACRC,WAAY,IACZE,aAAc,MACdD,SAAU,UAGNV,EAAwB,CAC5BO,MAAO,OACPC,OAAQ,QACRG,aAAc,MACdD,SAAU,UAGNlB,EAAgB,CAClBgB,OAAQ,OACRD,MAAO,OACPK,UAAW,SAGTjB,EAAc,CAChBS,QAAS,qBACTS,SAAU,YAGRZ,EAAoB,CACxBG,QAAS,oBACTS,SAAU,YAGNjB,EAAW,CACbkB,UAAW,OAEXC,WAAY,UACZC,SAAU,OACVC,WAAY,MACZC,WAAY,SAGVrB,EAAU,CACZiB,UAAW,OACXK,UAAW,OAEXJ,WAAY,UACZC,SAAU,OACVC,WAAY,MACZC,WAAY,UAGVhC,EAAW,CACb4B,UAAW,OAEXC,WAAY,UACZC,SAAU,OACVC,WAAY,MACZC,WAAY,QAEZE,MAAO,UACPD,UAAW,QAGTlC,EAAa,CACjBoC,eAAgB,OAChBD,MAAO,WAGM5C,IC9Kf,SAAS8C,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACbC,EAAOtD,yBAAe,cAyC5B,MAAY,WAARqD,EAEI,oCACEC,EAAKC,QAAQC,MAAMC,KAAI,gBAAG9C,EAAH,EAAGA,KAAH,OACrB,oCACI,kBAAC,EAAD,CAAQA,KAAQA,SAKb,sBAAR0C,EAEH,oCACEC,EAAKI,mBAAmBF,MAAMC,KAAI,gBAAG9C,EAAH,EAAGA,KAAH,OAChC,oCACI,kBAAC,EAAD,CAAQA,KAAQA,SAOxB,oCACE2C,EAAKK,kBAAkBH,MAAMC,KAAI,gBAAG9C,EAAH,EAAGA,KAAH,OAC/B,oCACI,kBAAC,EAAD,CAAQA,KAAQA,S,IAQ9BiD,E,kGACFrD,OAAA,WACI,OACI,yBAAKT,MAAS+D,GACV,kBAAC,IAAD,CAAY5C,SAAY,KACxB,yBAAKnB,MAASgE,GAAd,YAIA,kBAAC,IAAD,CAAYvC,SAAY,KACxB,yBAAKzB,MAASiE,GAAd,YAKA,kBAACX,EAAD,CAAaC,KAAO,YAEpB,yBAAKvD,MAASiE,GAAd,qBAIA,kBAACX,EAAD,CAAaC,KAAO,sBAEpB,yBAAKvD,MAASiE,GAAd,sBAIA,kBAACX,EAAD,CAAaC,KAAO,yB,GA3BfrB,aAkCf6B,EAAmB,CACrBxB,MAAO,OACP2B,gBAAiB,UAEjB7B,QAAS,OACTC,SAAU,gBACV6B,eAAgB,SAChB/B,QAAS,oBAGP4B,EAAe,CACjBvC,SAAU,QACVU,OAAQ,OACRiC,WAAY,OAEZrB,WAAY,UACZC,SAAU,OACVC,WAAY,MACZC,WAAY,QAEZJ,UAAW,UAGTmB,EAAkB,iBACjBD,EADiB,CAEpBI,WAAY,OACZpB,SAAU,SAICc,ICpIAO,UAPK,kBAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,EAAD","file":"component---src-pages-faculty-js-a2d9b74283f31f2a938b.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst Headshot = ({ fileName, alt, style }) => {\r\n  const { allImageSharp } = useStaticQuery(graphql`\r\n    query {\r\n      allImageSharp {\r\n        nodes {\r\n          fluid {\r\n            originalName\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  let fluid;\r\n\r\n    try {\r\n      fluid = allImageSharp.nodes.find(n => n.fluid.originalName === fileName)\r\n        .fluid\r\n    } catch(err) {\r\n      fluid = null\r\n    }\r\n \r\n  return (\r\n    <>\r\n      <Img fluid={fluid} alt={alt} style={style} />\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nclass Person extends Component {\r\n\r\n    render() {\r\n\r\n      const websiteLink = ( this.props.node.website === \"\" ? \r\n        <></> : \r\n        <a href = {this.props.node.website} target = \"_blank\" style = {aLinkStyle}>\r\n          <p style = {linkText}>\r\n            Personal Homepage\r\n          </p> \r\n        </a>\r\n      )\r\n\r\n        return(\r\n          <>\r\n          <MediaQuery minWidth = {500}>\r\n            <div style = {personWrapper}>\r\n                <MediaQuery minWidth = {920}>\r\n                <div style = {headshotWrapper}>\r\n                    <Headshot fileName = {this.props.node.imageName} alt = {this.props.node.name} style = {headshotImage} />\r\n                </div>\r\n                </MediaQuery>\r\n                <MediaQuery maxWidth = {919}>\r\n                <div style = {headshotWrapperMed}>\r\n                    <Headshot fileName = {this.props.node.imageName} alt = {this.props.node.name} style = {headshotImage} />\r\n                </div>\r\n                </MediaQuery>\r\n                <div style = {textWrapper}>\r\n                    <p style = {nameText}>{ this.props.node.name }</p>\r\n                    <p style = {bioText}>\r\n                        { this.props.node.bio }\r\n                    </p>\r\n                    {websiteLink}\r\n                </div>\r\n            </div>\r\n          </MediaQuery>\r\n          <MediaQuery maxWidth = {499}>\r\n          <div style = {personWrapperMobile}>\r\n              <div style = {headshotWrapperMobile}>\r\n                  <Headshot fileName = {this.props.node.imageName} alt = {this.props.node.name} style = {headshotImage} />\r\n              </div>\r\n              <div style = {textWrapperMobile}>\r\n                  <p style = {nameText}>{ this.props.node.name }</p>\r\n                  <p style = {bioText}>\r\n                      { this.props.node.bio }\r\n                  </p>\r\n                  {websiteLink}\r\n              </div>\r\n          </div>\r\n          </MediaQuery>\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nconst personWrapper = {\r\n    margin: '30px auto 20px auto',\r\n    padding: '0px 20px 0px 20px',\r\n    maxWidth: '1080px',\r\n\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n}\r\n\r\nconst personWrapperMobile = {\r\n  ...personWrapper,\r\n  flexFlow: 'column nowrap'\r\n}\r\n\r\nconst headshotWrapper = {\r\n    width: '300px',\r\n    height: '300px',\r\n    flexShrink: '0',\r\n    overflow: 'hidden'\r\n}\r\n\r\nconst headshotWrapperMed = {\r\n  width: '180px',\r\n  height: '280px',\r\n  flexShrink: '0',\r\n  borderRadius: '2px',\r\n  overflow: 'hidden',\r\n}\r\n\r\nconst headshotWrapperMobile = {\r\n  width: '100%',\r\n  height: '320px',\r\n  borderRadius: '2px',\r\n  overflow: 'hidden'\r\n}\r\n\r\nconst headshotImage = {\r\n    height: '100%',\r\n    width: '100%',\r\n    objectFit: 'cover'\r\n}\r\n\r\nconst textWrapper = {\r\n    padding: '0px 10px 10px 20px',\r\n    position: 'relative'\r\n}\r\n\r\nconst textWrapperMobile = {\r\n  padding: '10px 0px 10px 0px',\r\n  position: 'relative'\r\n}\r\n\r\nconst nameText = {\r\n    textAlign: 'left',\r\n    \r\n    fontFamily: 'Raleway',\r\n    fontSize: '20px',\r\n    fontWeight: '700',\r\n    lineHeight: '1.2em',\r\n}\r\n\r\nconst bioText = {\r\n    textAlign: 'left',\r\n    marginTop: '16px',\r\n\r\n    fontFamily: 'Raleway',\r\n    fontSize: '17px',\r\n    fontWeight: '400',\r\n    lineHeight: '1.35em',\r\n}\r\n\r\nconst linkText = {\r\n    textAlign: 'left',\r\n\r\n    fontFamily: 'Raleway',\r\n    fontSize: '17px',\r\n    fontWeight: '400',\r\n    lineHeight: '1.2em',\r\n\r\n    color: '#3896f5',\r\n    marginTop: '10px'\r\n}\r\n\r\nconst aLinkStyle = {\r\n  textDecoration: 'none',\r\n  color: '#3896f5',\r\n}\r\n\r\nexport default Person","import React, { Component } from 'react'\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Person from './person'\r\n\r\nimport MediaQuery from 'react-responsive'\r\n\r\nfunction LoadFaculty({ type }) {\r\n    const data = useStaticQuery(graphql`\r\n        query FacultyQuery {\r\n            faculty: allFacultyElement (filter: {type: {eq: \"faculty\"}}) {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        name,\r\n                        type,\r\n                        bio,\r\n                        website,\r\n                        imageName\r\n                    }\r\n                }\r\n            }\r\n            graduate_students: allFacultyElement (filter: {type: {eq: \"graduate_student\"}}) {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        name,\r\n                        type,\r\n                        bio,\r\n                        website,\r\n                        imageName\r\n                    }\r\n                }\r\n            }\r\n            affiliated_faculty: allFacultyElement (filter: {type: {eq: \"affiliated_faculty\"}}) {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        name,\r\n                        type,\r\n                        bio,\r\n                        website,\r\n                        imageName\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    if (type == 'faculty') {\r\n        return(\r\n            <>\r\n            { data.faculty.edges.map(({ node }) => (\r\n                <>\r\n                    <Person node = {node} />\r\n                </>\r\n            )) }\r\n            </>\r\n        )\r\n    } else if (type == 'affiliated_faculty') {\r\n        return(\r\n            <>\r\n            { data.affiliated_faculty.edges.map(({ node }) => (\r\n                <>\r\n                    <Person node = {node} />\r\n                </>\r\n            )) }\r\n            </>\r\n        )\r\n    } else {\r\n        return(\r\n            <>\r\n            { data.graduate_students.edges.map(({ node }) => (\r\n                <>\r\n                    <Person node = {node} />\r\n                </>\r\n            )) }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nclass People extends Component {\r\n    render() {\r\n        return(\r\n            <div style = {componentWrapper}>\r\n                <MediaQuery minWidth = {500}>\r\n                <div style = {peopleHeader}>\r\n                    Faculty\r\n                </div>\r\n                </MediaQuery>\r\n                <MediaQuery maxWidth = {499}>\r\n                <div style = {peopleHeaderMobile}>\r\n                    Faculty\r\n                </div>\r\n                </MediaQuery>\r\n\r\n                <LoadFaculty type = 'faculty' />\r\n\r\n                <div style = {peopleHeaderMobile}>\r\n                    Graduate Students\r\n                </div>\r\n\r\n                <LoadFaculty type = 'graduate_students' />\r\n\r\n                <div style = {peopleHeaderMobile}>\r\n                    Affiliated Faculty\r\n                </div>\r\n\r\n                <LoadFaculty type = 'affiliated_faculty' />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst componentWrapper = {\r\n    width: '100%',\r\n    backgroundColor: '#f5f5f5',\r\n\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    justifyContent: 'center',\r\n    padding: '0px 0px 60px 0px'\r\n}\r\n\r\nconst peopleHeader = {\r\n    maxWidth: '900px',\r\n    margin: 'auto',\r\n    paddingTop: '80px',\r\n\r\n    fontFamily: 'Raleway',\r\n    fontSize: '40px',\r\n    fontWeight: '600',\r\n    lineHeight: '1.2em',\r\n\r\n    textAlign: 'center',\r\n}\r\n\r\nconst peopleHeaderMobile = {\r\n    ...peopleHeader,\r\n    paddingTop: '40px',\r\n    fontSize: '28px'\r\n}\r\n\r\n\r\nexport default People","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport People from '../components/faculty/people'\r\n\r\nconst FacultyPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <People />\r\n  </Layout>\r\n)\r\n\r\nexport default FacultyPage\r\n"],"sourceRoot":""}